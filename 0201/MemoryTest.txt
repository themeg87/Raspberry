MemoryTest Mission

기억력 테스트기
1. Led 핀의 값을 배열 형태로 저장합니다. 나머지는 기존의 방법으로 설정(버튼,부저)
2. Led 핀의 출력을 for in range 형태로 설정 나머지는 기존의 방법으로
3. 시간과 컬러를 입력받아 소리를 재생하는 함수 작성(빨간색은 262Hz, 초록색은 294Hz, 파란색은 330Hz)
4. 순서배열을 입력받고 배열의 컬러값의 순서대로 LED를 켜고 소리를 내는 함수 작성
소리를 낼때는 앞에서의 소리를 재생하는 함수 활용
5. 플레이어의 입력을 받아 값을 반환해주는 함수 작성
6. 메인 함수를 따로 작성하고 #try-except-finally 구문을 사용하여 GPIO를 정리
7. 시퀀스의 배열을 미리 만들어 준뒤 무한 반복문 생성
8. 1번의 반복이 이루어질 때 마다 led_pins의 값중에 하나를 랜덤으로 선택하여 시퀀스 배열에 추가하고
시퀀스를 재생하여 준다. 그리고 사용자 입력 배열을 생성뒤 시퀀스의 길이 만큼 플레이어에게 값을 입력받고
다음 버튼을 누를 때 까지의 시간 딜레이도 넣어준다. 이 과정을 마친 뒤에는 사용자의 입력 배열과 시퀀스의
배열을 비교하여 다음 반복으로 넘어갈지 넘어가지 않을 지를 판단한다. 또한 sw4버튼을 누르면 강제 종료 되게끔
설정한다. 만약 강제종료를 하거나 오답일때는 점수를 출력하여 준다. 이때 점수는 (시퀀스 비열의 길이-1)점 이다.

동작 로직  간단 설명

1번째 싸이클에서 
led핀 배열의 값 3가지중 1개를 골라 시퀀스 배열에 추가
이때 플레이어는 시퀀스 배열의 길이가 1이기에 1번의 입력만 받음
플레이어의 배열과 시퀀스 배열 비교 후 다음 반복으로 넘어갈지를 판단
만약 정답이라면

2번째 싸이클에서
led핀 배열의 값 3개지중 1개를 골라 시퀀스 배열에 추가
이때 플레이어는 시퀀스 배열의 길이가 2이기에 2번의 입력을 받음
플레이어의 배열과 시퀀스 배열 비교 후 다음 반복으로 넘어갈지를 판단
만약 오답이라면 점수 출력

+추가할만한 요소들 : 오답이었을때의 특수한 LED 점등이나 사운드 재생
